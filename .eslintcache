[{"/home/mhchan/Desktop/nov/form-demo/src/index.js":"1","/home/mhchan/Desktop/nov/form-demo/src/App.js":"2","/home/mhchan/Desktop/nov/form-demo/src/reportWebVitals.js":"3","/home/mhchan/Desktop/nov/form-demo/src/components/LoadingIndicator.js":"4","/home/mhchan/Desktop/nov/form-demo/src/components/NavBarDisplay.js":"5","/home/mhchan/Desktop/nov/form-demo/src/pages/HomePage.js":"6","/home/mhchan/Desktop/nov/form-demo/src/pages/UserProfilePage.js":"7","/home/mhchan/Desktop/nov/form-demo/src/containers/UserImages.js":"8","/home/mhchan/Desktop/nov/form-demo/src/components/AuthModal.js":"9","/home/mhchan/Desktop/nov/form-demo/src/components/SignUpForm.js":"10","/home/mhchan/Desktop/nov/form-demo/src/components/LoginForm.js":"11","/home/mhchan/Desktop/nov/form-demo/src/pages/MyProfilePage.js":"12","/home/mhchan/Desktop/nov/form-demo/src/pages/UploadPage.js":"13"},{"size":691,"mtime":1607499874000,"results":"14","hashOfConfig":"15"},{"size":1688,"mtime":1607654216013,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"15"},{"size":1294,"mtime":1607306024000,"results":"18","hashOfConfig":"15"},{"size":2194,"mtime":1607571714000,"results":"19","hashOfConfig":"15"},{"size":1825,"mtime":1607308724000,"results":"20","hashOfConfig":"15"},{"size":808,"mtime":1607310344000,"results":"21","hashOfConfig":"15"},{"size":1497,"mtime":1607584904000,"results":"22","hashOfConfig":"15"},{"size":673,"mtime":1607570664000,"results":"23","hashOfConfig":"15"},{"size":5908,"mtime":1607584562000,"results":"24","hashOfConfig":"15"},{"size":2282,"mtime":1607572656000,"results":"25","hashOfConfig":"15"},{"size":1089,"mtime":1607654258623,"results":"26","hashOfConfig":"15"},{"size":2439,"mtime":1607656570942,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ok24rt",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},"/home/mhchan/Desktop/nov/form-demo/src/index.js",[],"/home/mhchan/Desktop/nov/form-demo/src/App.js",[],"/home/mhchan/Desktop/nov/form-demo/src/reportWebVitals.js",[],["56","57"],"/home/mhchan/Desktop/nov/form-demo/src/components/LoadingIndicator.js",[],"/home/mhchan/Desktop/nov/form-demo/src/components/NavBarDisplay.js",[],"/home/mhchan/Desktop/nov/form-demo/src/pages/HomePage.js",[],"/home/mhchan/Desktop/nov/form-demo/src/pages/UserProfilePage.js",[],"/home/mhchan/Desktop/nov/form-demo/src/containers/UserImages.js",[],"/home/mhchan/Desktop/nov/form-demo/src/components/AuthModal.js",[],"/home/mhchan/Desktop/nov/form-demo/src/components/SignUpForm.js",["58","59"],"/home/mhchan/Desktop/nov/form-demo/src/components/LoginForm.js",["60"],"/home/mhchan/Desktop/nov/form-demo/src/pages/MyProfilePage.js",[],"/home/mhchan/Desktop/nov/form-demo/src/pages/UploadPage.js",["61","62"],"import React, {useState, useRef} from \"react\"\nimport {Form, FormGroup, Input, FormText, Button} from \"reactstrap\"\n\nimport axios from \"axios\"\n\nconst UploadPage = () => {\n  const [imageValue, setImageValue] = useState(null)\n  const [imageFile, setImageFile] = useState(null)\n\n  const [previewImage, setPreviewImage] = useState(null)\n  const [message, setMessage] = useState('')\n  console.log(previewImage)\n  return (\n    <div>\n      <h1>Upload your image!</h1>\n      <Form onSubmit={\n        (e) => {\n          e.preventDefault()\n          let token = localStorage.getItem(\"jwt\")\n          let formData = new FormData();\n          // Append the key:value pair to the formData object\n          formData.append(\"image\", imageFile);\n\n          axios.post(\"https://insta.nextacademy.com/api/v1/images/\", formData, {\n            headers: {Authorization: \"Bearer \" + token}\n          })\n          .then(\n            response => {\n              if (response.data.success) {\n                setMessage(\"Image Uploaded Successfully!\")\n                setPreviewImage(null)\n                setImageFile(null)\n                setImageValue(null)\n            }\n            }\n          )\n          .catch( error => {\n            console.log(error)\n          })\n        } \n      }>\n        <FormGroup>\n          <Input\n            type=\"file\"\n            name=\"image-file\"\n            value={imageValue}\n            onChange={\n              (e) => {\n                if(e.target.value){\n                  setImageValue(e.target.value)\n                  setPreviewImage(URL.createObjectURL(e.target.files[0]))\n                  setImageFile(e.target.files[0])\n                } else {\n                  setImageValue(null)\n                  setPreviewImage(null)\n                  setImageFile(null)\n                }\n              }\n            }\n          />\n          <FormText color=\"muted\">\n            Make sure the image being uploaded is a supported format.\n          </FormText>\n        </FormGroup>\n        <Button type=\"submit\" color=\"primary\">\n          Upload\n        </Button>\n      </Form>\n\n      <div className=\"card\">\n        {previewImage ? (\n          <img\n            src={previewImage}\n            width=\"50%\"\n            height=\"50%\"\n          />\n          ) : (\n          <h3  className=\"text-center\">\n            {message ? message : \"Live Preview\"}\n          </h3>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default UploadPage",{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":115,"column":5,"nodeType":"69","endLine":115,"endColumn":22,"suggestions":"70"},{"ruleId":"71","severity":1,"message":"72","line":194,"column":32,"nodeType":"73","endLine":197,"endColumn":14},{"ruleId":"71","severity":1,"message":"72","line":59,"column":26,"nodeType":"73","endLine":62,"endColumn":14},{"ruleId":"74","severity":1,"message":"75","line":1,"column":26,"nodeType":"76","messageId":"77","endLine":1,"endColumn":32},{"ruleId":"78","severity":1,"message":"79","line":72,"column":11,"nodeType":"73","endLine":76,"endColumn":13},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'password'. Either include it or remove the dependency array.","ArrayExpression",["82"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation",{"desc":"83","fix":"84"},"Update the dependencies array to be: [confirmPassword, password]",{"range":"85","text":"86"},[3188,3205],"[confirmPassword, password]"]